{"version":3,"sources":["webpack:///webpack/bootstrap 2ef81abe7a0574ab8729","webpack:///./app/js/main.js","webpack:///./app/js/utils/LWdb.js","webpack:///./app/js/utils/utils.js","webpack:///./app/js/utils/memorystore.js","webpack:///./app/js/utils/navigation.js","webpack:///./app/js/local/local.js","webpack:///./app/js/actions/actions.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA8B;AAC9B,8BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA,IAAG;;AAEH;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sBAAqB,yBAAyB;AAC9C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB,yBAAyB;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,IAAG;;AAEH;;AAEA;;AAEA;;AAEA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC1MA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wCAAuC;AACvC;AACA;;AAEA;AACA,MAAK;;AAEL;AACA,iDAAgD;AAChD;AACA,QAAO;AACP;AACA,MAAK;;AAEL,qCAAoC;AACpC;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,yBAAwB,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,EAAC,uEAAuE;AACxE,EAAC,qEAAqE;AACtE,EAAC,kEAAkE;AACnE,EAAC,qEAAqE,EAAE,sEAAsE,EAAE,0EAA0E,EAAE,qEAAqE;AACjS,EAAC,qEAAqE;AACtE,EAAC,oEAAoE;AACrE,EAAC,2EAA2E,EAAE,2EAA2E;AACzJ,EAAC,qEAAqE;AACtE,EAAC,sEAAsE;AACvE,EAAC;AACD;AACA;;AAEA;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,6BAA4B;AAC5B;AACA;AACA,qCAAoC,qBAAqB;AACzD;AACA;AACA;AACA,IAAG;;AAEH,yBAAwB;AACxB;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,kCAAiC;AACjC;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;AACJ,IAAG;;AAEH,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,yDAAwD;AACxD;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC1IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB;;AAElB,kCAAiC;AACjC;;AAEA;AACA;AACA;;AAEA,wCAAuC;AACvC,UAAS;;AAET,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA2C;AAC3C;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4CAA2C;AAC3C;AACA;AACA,6DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kGAAiG;;AAEjG;AACA,wEAAuE;AACvE;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,cAAa;;AAEb;AACA;AACA,cAAa;;AAEb;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;AAQA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6DAA4D;AAC5D;AACA;AACA,gEAA+D;;AAE/D;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAa;;;AAGb,mCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;;;AAGA,oGAAmG;;AAEnG;AACA,2EAA0E;AAC1E;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,8DAA6D;AAC7D,yGAAwG;AACxG;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,8DAA6D;AAC7D,uDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sCAAqC,MAAM,wDAAwD,KAAK;AACxG,4DAA2D,WAAW;AACtE,+EAA8E,MAAM;AACpF;AACA,6BAA4B,MAAM,6CAA6C,MAAM;AACrF,qHAAoH,MAAM,oCAAoC,KAAK;AACnK,0HAAyH,MAAM,yCAAyC,WAAW;AACnL,+EAA8E,MAAM;AACpF,oCAAmC,MAAM,eAAe,MAAM,aAAa,OAAO;AAClF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb,qDAAoD;AACpD;AACA;;AAEA;AACA,4CAA2C;AAC3C;AACA;AACA,mDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2EAA0E,MAAM,qBAAqB,KAAK,oBAAoB,WAAW,0BAA0B,OAAO;AAC1K;AACA,kBAAiB;;;AAGjB;AACA;AACA,cAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,6BAA4B;AAC5B;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0EAAyE,MAAM,0BAA0B,KAAK,0BAA0B,WAAW,+BAA+B,OAAO;;AAEzL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA,qEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2ef81abe7a0574ab8729","/**************************************************\r\n* Learn Words // main.js\r\n* coded by Anatolii Marezhanyi aka e1r0nd//[CRG] - March 2014\r\n* http://linkedin.com/in/merezhany/ a.merezhanyi@gmail.com\r\n* Placed in public domain.\r\n**************************************************/\r\nrequire('./utils/LWdb');\r\nrequire('./utils/utils');\r\nrequire('./utils/memorystore');\r\nrequire('./utils/navigation');\r\nrequire('./local/local');\r\nrequire('./actions/actions');\r\n\r\nif ('development' === NODE_ENV) {\r\n  console.log('development environment');\r\n}\r\n// read settings\r\nSettings.getSettings();\r\n\r\n// set user saved local\r\nif (local.currentLocal !== $('[data-type=lang-select].selected').data('lang')) {\r\n\t$('[data-lang=' + local.currentLocal + ']').click();\r\n};\r\n\r\nVocabulary.viewWord();\r\nLearn.recountIndexLearn();\r\nLearn.showWord();\r\nRepeat.recountIndexRepeat();\r\nRepeat.showWord();\r\nUtils.closeMobMenu();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/js/main.js\n// module id = 0\n// module chunks = 0","/**************************************************\r\n * Learn Words // localstorage.js\r\n * coded by Anatolii Marezhanyi aka e1r0nd//[CRG] - March 2014\r\n * http://linkedin.com/in/merezhany/ e1r0nd.crg@gmail.com\r\n *\r\n * Updated by Hannes Hirzel, November 2016\r\n *\r\n * Placed in public domain.\r\n **************************************************/\r\n\r\n// Define global LearnWords object\r\n// var LW = {};\r\n\r\n// Define database sub-object\r\nLW = {\r\n\r\n  isLocalStorageAvailable: function () {\r\n    try {\r\n      return 'localStorage' in window && window['localStorage'] !== null;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  },\r\n\r\n  readItem: function (key) {\r\n    if (LW.isOK) {\r\n      return JSON.parse(localStorage.getItem(key));\r\n    }\r\n  },\r\n\r\n  removeItem: function (key) {\r\n    if (LW.isOK) {\r\n      localStorage.removeItem(key);\r\n    }\r\n  },\r\n\r\n  storeItem: function (key, value) {\r\n    if (LW.isOK) {\r\n      try {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n      } catch (e) {\r\n        if (e === QUOTA_EXCEEDED_ERR) {\r\n          alert('Local Storage is full');\r\n        }\r\n        return false;\r\n      }\r\n    }\r\n  },\r\n\r\n  putSettings: function (theSettingsObj) {\r\n    LW.storeItem(LW.name + '-words-settings', theSettingsObj);\r\n  },\r\n\r\n  getSettings: function () {\r\n\r\n    var settings = LW.readItem(LW.name + '-words-settings');\r\n    if (!settings) {\r\n      // the app runs for the first time, thus\r\n      // initialize the setting object neeeds to be initialized\r\n      // with default values.\r\n\r\n      // first is for box (or step) 1 in the Leitner box;\r\n      //       ask the word again after 1 day\r\n      // second is for box 2 ; ask the word again after 3 days\r\n      // third is for box 3 ; ask the word again after 7 days\r\n\r\n      // Note: box 0 is for the Learn mode and it not set\r\n      // as the words are accessible all the time\r\n      console.log('initialize settings');\r\n      settings = {\r\n        first: 1,\r\n        second: 3,\r\n        third: 7\r\n      };\r\n      LW.storeItem(LW.name + '-settings', settings);\r\n      LW.storeItem(LW.name + '-language', 'en_GB');\r\n\r\n    };\r\n\r\n    return settings\r\n  },\r\n\r\n  loadWords: function (theWords) {\r\n    var i = 0;\r\n    var arrayOfKeys = [];\r\n\r\n    theWords.forEach(function (element) {\r\n      i = i + 1;\r\n      element.index = 'index' + i;\r\n      element.step = 0;\r\n      element.date = 0;\r\n      LW.storeItem(LW.name + '-' + element.index, element);\r\n      arrayOfKeys.push(element.index);\r\n    });\r\n\r\n    LW.storeItem(LW.name + '-words', arrayOfKeys.join());\r\n    LW.index = arrayOfKeys;\r\n\r\n    console.log(arrayOfKeys.length + ' words loaded');\r\n\r\n  },\r\n\r\n  isEmpty: function (key) {\r\n    if (LW.isOK) {\r\n      if (LW.index.length === 0) {\r\n        return true\r\n      } else {\r\n        return false\r\n      };\r\n    }\r\n  },\r\n\r\n  dumpWords: function (aKeyPrefix) {\r\n    if (LW.isOK) {\r\n      'use strict';\r\n      var key;\r\n      var strValue;\r\n      var result = [];\r\n\r\n      var prefixForNumber = LW.name + '-index';\r\n\r\n      // go through all keys starting with the name\r\n      // of the database, i.e 'learnWords-index14'\r\n      // collect the matching objects into arr\r\n      for (var i = 0; i < localStorage.length; i++) {\r\n        key = localStorage.key(i);\r\n        strValue = localStorage.getItem(key);\r\n\r\n        if (key.lastIndexOf(prefixForNumber, 0) === 0) {\r\n          result.push(JSON.parse(strValue));\r\n        };\r\n      };\r\n\r\n      // Dump the array as JSON code (for select all / copy)\r\n      console.log(JSON.stringify(result));\r\n    }\r\n  },\r\n\r\n  removeObjects: function (aKeyPrefix) {\r\n    if (LW.isOK) {\r\n      var key;\r\n      var st;\r\n      var keysToDelete = [];\r\n\r\n      // go through all keys starting with the name\r\n      // of the database, i.e 'learnWords-index14'\r\n      for (var i = 0; i < localStorage.length; i++) {\r\n        key = localStorage.key(i);\r\n        st = localStorage.getItem(key);\r\n\r\n        if (key.lastIndexOf(aKeyPrefix, 0) === 0) {\r\n          keysToDelete.push(key);\r\n        };\r\n      };\r\n      // now we have all the keys which should be deleted\r\n      // in the array keysToDelete.\r\n      console.log(keysToDelete);\r\n      keysToDelete.forEach(function (aKey) {\r\n        localStorage.removeItem(aKey);\r\n      });\r\n    }\r\n  },\r\n\r\n  removeWords: function () {\r\n\r\n    var aKeyPrefix = LW.name + '-index';\r\n    LW.removeObjects(aKeyPrefix);\r\n\r\n    // reset index\r\n    localStorage.setItem(LW.name + '-words', '');\r\n\r\n    // this one triggers that memorystore is executed\r\n    localStorage.removeItem(LW.name + '-settings');\r\n\r\n  },\r\n\r\n  destroy: function () {\r\n\r\n    var aKeyPrefix = LW.name;\r\n\r\n    LW.removeObjects(aKeyPrefix);\r\n\r\n  },\r\n\r\n  init: function (dbName) {\r\n    LW.isOK = false;\r\n    if (!LW.isLocalStorageAvailable()) {\r\n      alert('Local Storage is not available.');\r\n      return false;\r\n    };\r\n    LW.name = dbName;\r\n    // get index\r\n    LW.index = [];\r\n    var strIndex = localStorage.getItem(LW.name + '-words');\r\n    if (strIndex) {\r\n      LW.index = strIndex.split(',')\r\n    };\r\n    LW.isOK = true;\r\n  }\r\n};\r\n\r\n// initialize database sub-object\r\nLW.init('LWdb');\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/js/utils/LWdb.js\n// module id = 1\n// module chunks = 0","/**************************************************\r\n * Learn Words // utils.js\r\n * coded by Anatolii Marezhanyi aka e1r0nd//[CRG] - March 2014\r\n * http://linkedin.com/in/merezhany/ e1r0nd.crg@gmail.com\r\n * Placed in public domain.\r\n **************************************************/\r\nif (typeof (Utils) == 'undefined' || Utils == null || !Utils) {\r\n\r\n  Utils = {\r\n\r\n    isNumber: function (str, withDot) { //validate filed for number value\r\n      var NumberReg = /^\\d+$/,\r\n        NumberWithDotReg = /^[-+]?[0-9]*\\.?[0-9]+$/;\r\n\r\n      return withDot ? NumberWithDotReg.test(str) : NumberReg.test(str);\r\n    },\r\n\r\n    clearFields: function () {\r\n      $('.form-group').each(function (i, node) { //clear all error styles\r\n        $(node).removeClass('has-error');\r\n      });\r\n      $('#errorSettings').addClass('nodisplay');\r\n    },\r\n\r\n    setFieldError: function (self) { //set the error style for the current input field\r\n      $(self).addClass('has-error');\r\n      return true;\r\n    },\r\n\r\n    getRandomInt: function (min, max) {\r\n      return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    },\r\n\r\n    getToday: function (fullDate) {\r\n      var now = new Date();\r\n\r\n      if (fullDate) {\r\n        return new Date().valueOf();\r\n      } else {\r\n        return new Date(now.getFullYear(), now.getMonth(), now.getDate()).valueOf();\r\n      }\r\n    },\r\n\r\n    closeMobMenu: function () {\r\n      if ($('#bs-example-navbar-collapse-1').hasClass('in')) {\r\n        $('#navbarToggle').click();\r\n      }\r\n    },\r\n    shuffle: function (a) {\r\n      var j, x, i;\r\n      for (i = a.length; i; i--) {\r\n        j = Math.floor(Math.random() * i);\r\n        x = a[i - 1];\r\n        a[i - 1] = a[j];\r\n        a[j] = x;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nif (typeof module !== 'undefined' && module.exports != null) {\r\n    exports.Utils = Utils;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/js/utils/utils.js\n// module id = 2\n// module chunks = 0","/**************************************************\r\n* Learn Words // memorystore.js\r\n*\r\n* Load initial set of German words with\r\n* English translation.\r\n*\r\n**************************************************/\r\n\r\n\"use strict\";\r\n\r\nif (LW.isOK && LW.isEmpty) {\r\n        console.log('memorystore: start loading words');\r\n\r\nLW.loadWords(\r\n[\r\n{\"index\":\"index1\",\"word\":\"das Auto\",\"translate\":\"car\",\"step\":0,\"date\":0},\r\n{\"index\":\"index2\",\"word\":\"laufen\",\"translate\":\"run\",\"step\":0,\"date\":0},\r\n{\"index\":\"index3\",\"word\":\"alt\",\"translate\":\"old\",\"step\":0,\"date\":0},\r\n{\"index\":\"index4\",\"word\":\"krank\",\"translate\":\"sick\",\"step\":0,\"date\":0},{\"index\":\"index5\",\"word\":\"heute\",\"translate\":\"today\",\"step\":0,\"date\":0},{\"index\":\"index6\",\"word\":\"schreiben\",\"translate\":\"write\",\"step\":0,\"date\":0},{\"index\":\"index7\",\"word\":\"hell\",\"translate\":\"light\",\"step\":0,\"date\":0},\r\n{\"index\":\"index8\",\"word\":\"reich\",\"translate\":\"rich\",\"step\":0,\"date\":0},\r\n{\"index\":\"index9\",\"word\":\"süß\",\"translate\":\"sweet\",\"step\":1,\"date\":0},\r\n{\"index\":\"index10\",\"word\":\"weiblich\",\"translate\":\"female\",\"step\":1,\"date\":0},{\"index\":\"index11\",\"word\":\"bestellen\",\"translate\":\"order\",\"step\":1,\"date\":0},\r\n{\"index\":\"index12\",\"word\":\"kalt\",\"translate\":\"cold\",\"step\":2,\"date\":0},\r\n{\"index\":\"index13\",\"word\":\"sauer\",\"translate\":\"sour\",\"step\":2,\"date\":0},\r\n{\"index\":\"index14\",\"word\":\"fliegen\",\"translate\":\"fly\",\"step\":3,\"date\":0}\r\n]\r\n);\r\n\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/js/utils/memorystore.js\n// module id = 3\n// module chunks = 0","/**************************************************\r\n* Learn Words // navigation.js\r\n* coded by Anatolii Marezhanyi aka e1r0nd//[CRG] - March 2014\r\n* http://linkedin.com/in/merezhany/ e1r0nd.crg@gmail.com\r\n* Placed in public domain.\r\n**************************************************/\r\nif(typeof(Navigation) == 'undefined' || Navigation == null || !Navigation){\r\n\t\r\n\tNavigation = {\r\n\t\r\n\t\thashguard: function(init){ //onHashChange\r\n\t\t\tif (init) this.hash = window.location.hash;\r\n\t\t\tif (this.hash != window.location.hash){\r\n\t\t\t\t$(window).trigger('hashbreak', {\"prevhash\":this.hash});\r\n\t\t\t\tthis.hash = window.location.hash;\r\n\t\t\t}\r\n\t\t\tsetTimeout('Navigation.hashguard(false)', 50);\r\n\t\t},\r\n\t\t\r\n\t\thashbreak: function(){ //hashchange event\r\n\t\t\tvar hashUrl = window.location.hash.slice(3);\r\n\t\t\t\r\n\t\t\tif (hashUrl) {\r\n\t\t\t\t$('[data-target=' + window.location.hash.slice(3) + ']').click();\r\n\t\t\t} else {\r\n\t\t\t\t$('[data-target=summary]').click();\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tnavSelect: function(){\r\n\t\t\t$('[data-toggle=nav]').each(function(){\r\n\t\t\t\t$(this).addClass('nodisplay');\r\n\t\t\t});\r\n\t\t\t$('[data-type=nav-select-li]').each(function(){\r\n\t\t\t\t$(this).removeClass('active');\r\n\t\t\t});\r\n\t\t\t$(this).parent().addClass('active');\r\n\t\t\t$('#'+$(this).data('target')).removeClass('nodisplay');\r\n\t\t\tUtils.closeMobMenu();\r\n\t\t},\r\n\t\t\r\n\t\tinit: function(){\r\n\t\t\t$(document).on('click touchstart', '[data-type=nav-select]', Navigation.navSelect);\r\n\t\t\t$(window).bind('hashbreak', Navigation.hashbreak);\r\n\t\t\tNavigation.hashguard(false);\r\n\t\t}\r\n\t};\r\n\t\r\n\tNavigation.init();\r\n}\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/js/utils/navigation.js\n// module id = 4\n// module chunks = 0","/**************************************************\r\n* Learn Words // local.js\r\n* coded by Anatolii Marezhanyi aka e1r0nd//[CRG] - March 2014\r\n* http://linkedin.com/in/merezhany/ e1r0nd.crg@gmail.com\r\n* Placed in public domain.\r\n**************************************************/\r\nif(typeof(local) == 'undefined' || local == null || !local){\r\nconsole.log(\"define local\");\r\n\tlocal = {\r\n\r\n\t\ten_GB: {\r\n\t\t\tsummary: 'Summary',\r\n\t\t\tlearn: 'Learn',\r\n\t\t\trepeat: 'Repeat',\r\n\t\t\tvocabulary: 'Vocabulary',\r\n\t\t\tsettings: 'Settings',\r\n\t\t\teditWords: 'Edit words',\r\n\t\t\tfirst: 'First',\r\n\t\t\tsecond: 'Second',\r\n\t\t\tthird: 'Third',\r\n\t\t\tsaveBtn: 'Save',\r\n\t\t\tcancelBtn: 'Cancel',\r\n\t\t\tlanguage: 'Language',\r\n\t\t\ten_GB: 'english',\r\n\t\t\tde_DE: 'deutsch',\r\n\t\t\tru_RU: 'русский',\r\n\t\t\terrorEmpty: 'All fields are required.',\r\n\t\t\terrorValid: 'Entered values are incorrect.',\r\n\t\t\terrorNo: 'New settings was saved.',\r\n\t\t\terrorNoW: 'New word was added.',\r\n\t\t\ttotalWords: 'Total words',\r\n\t\t\tlearnWordsNum: 'Words to learn',\r\n\t\t\trepeatWords: 'Words to repeat',\r\n\t\t\trememberBtn: 'Remember',\r\n\t\t\trepeatBtn: 'Repeat',\r\n\t\t\tknownBtn: 'Know',\r\n\t\t\tallWordsOk: 'No more words for learning.',\r\n\t\t\tinputWordLbl: 'Word',\r\n\t\t\tinputTranslateLbl: 'Translate',\r\n\t\t\tenterBtn: 'Check',\r\n\t\t\tallWordsDone: 'No more words for repeat.'\r\n\t\t},\r\n\r\n\t\tru_RU: {\r\n\t\t\tsummary: 'Сводка',\r\n\t\t\tlearn: 'Учить',\r\n\t\t\trepeat: 'Повторять',\r\n\t\t\tvocabulary: 'Словарь',\r\n\t\t\tsettings: 'Настройки',\r\n\t\t\teditWords: 'Редактировать слова',\r\n\t\t\tfirst: 'Первый',\r\n\t\t\tsecond: 'Второй',\r\n\t\t\tthird: 'Третий',\r\n\t\t\tsaveBtn: 'Сохранить',\r\n\t\t\tcancelBtn: 'Отменить',\r\n\t\t\tlanguage: 'Язык',\r\n\t\t\ten_GB: 'english',\r\n\t\t\tde_DE: 'deutsch',\r\n\t\t\tru_RU: 'русский',\r\n\t\t\terrorEmpty: 'Все поля обязательны.',\r\n\t\t\terrorValid: 'Введенные значения невалидны.',\r\n\t\t\terrorNo: 'Новые значение были записаны.',\r\n\t\t\terrorNoW: 'Новое слово добавлено.',\r\n\t\t\ttotalWords: 'Всего слов',\r\n\t\t\tlearnWordsNum: 'Слов учить',\r\n\t\t\trepeatWords: 'Сегодня поторить слов',\r\n\t\t\trememberBtn: 'Запомнил',\r\n\t\t\trepeatBtn: 'Повторить',\r\n\t\t\tknownBtn: 'Знаю',\r\n\t\t\tallWordsOk: 'Нет больше слов для изучения.',\r\n\t\t\tinputWordLbl: 'Слово',\r\n\t\t\tinputTranslateLbl: 'Перевод',\r\n\t\t\tenterBtn: 'Проверить',\r\n\t\t\tallWordsDone: 'Нет больше слов для повторения.'\r\n\t\t},\r\n\r\n\t\tde_DE: {\r\n\t\t\tsummary: 'Summe',\r\n\t\t\tlearn: 'Lernen',\r\n\t\t\trepeat: 'Wiederholen',\r\n\t\t\tvocabulary: 'Vokabular',\r\n\t\t\tsettings: 'Rahmen',\r\n\t\t\teditWords: 'Wörter ändern',\r\n\t\t\tfirst: 'Erste',\r\n\t\t\tsecond: 'Zweite',\r\n\t\t\tthird: 'Dritte',\r\n\t\t\tsaveBtn: 'Speichern',\r\n\t\t\tcancelBtn: 'Stornieren',\r\n\t\t\tlanguage: 'Sprache',\r\n\t\t\ten_GB: 'english',\r\n\t\t\tde_DE: 'deutsch',\r\n\t\t\tru_RU: 'русский',\r\n\t\t\terrorEmpty: 'Alle Felder sind erforderlich.',\r\n\t\t\terrorValid: 'Eingegebene Werte sind falsch.',\r\n\t\t\terrorNo: 'Neue Einstellungen gespeichert wurde.',\r\n\t\t\terrorNoW: 'Neues Wort hinzugefügt.',\r\n\t\t\ttotalWords: 'Insgesamt Worte',\r\n\t\t\tlearnWordsNum: 'Wörter zu lernen',\r\n\t\t\trepeatWords: 'Worte zu wiederholen',\r\n\t\t\trememberBtn: 'Merken',\r\n\t\t\trepeatBtn: 'Wiederholen',\r\n\t\t\tknownBtn: 'Wissen',\r\n\t\t\tallWordsOk: 'Keine Worte mehr für das Lernen.',\r\n\t\t\tinputWordLbl: 'Wort',\r\n\t\t\tinputTranslateLbl: 'Übersetzen',\r\n\t\t\tenterBtn: 'Prüfen',\r\n\t\t\tallWordsDone: 'Keine Worte mehr für wiederholen.'\r\n\t\t},\r\n\t\tchangeLocalContent: function(){ // change inner content\r\n\t\t\tvar langNode = $('[data-toggle=lang]'),\r\n\t\t\t\tlangSelect = $('[data-type=lang-select]');\r\n\r\n\t\t\t$(langNode).each(function(i, node){\r\n\t\t\t\t$(node).text(local[local.currentLocal][$(node).data('lang')]);\r\n\t\t\t});\r\n\t\t\t$(langSelect).each(function(i, node){\r\n\t\t\t\t$(node).removeClass('selected');\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tlangSelect: function(){ //change localization\r\n\t\t\tlocal.currentLocal = $(this).data('lang');\r\n\t\t\t$('#langSelect').click();\r\n\t\t\t$('.navbar-toggle:visible').click();\r\n\t\t\tlocal.changeLocalContent();\r\n\t\t\tLW.storeItem(LW.name+'-language', local.currentLocal);\r\n\t\t\t$(this).addClass('selected');\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\tinit: function(){\r\n                        var settings = LW.getSettings(); // to force initialisation.\r\n\t\t\tlocal.currentLocal = LW.readItem(LW.name+'-language');\r\n\t\t\t$(document).on('click touchstart', '[data-type=lang-select]', local.langSelect);\r\n\t\t}\r\n\t}\r\n\r\n\tlocal.init();\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/js/local/local.js\n// module id = 5\n// module chunks = 0","/**********************************************\r\n * actions.js\r\n *\r\n * combination of\r\n *   settings.js\r\n *   learn.js\r\n *   repeat.js\r\n *   vocabulary.js\r\n *\r\n * coded by Anatolii Marezhanyi aka e1r0nd//[CRG] - March 2014\r\n * http://linkedin.com/in/merezhany/ e1r0nd.crg@gmail.com\r\n *\r\n * Updated by Hannes Hirzel, November 2016\r\n *\r\n * Placed in public domain.\r\n **************************************************/\r\n\r\nif (typeof(Settings) == 'undefined' || Settings == null || !Settings) {\r\n\r\n    Settings = {\r\n\r\n        inputFirstCheck: $('#inputFirstCheck'),\r\n        inputSecondCheck: $('#inputSecondCheck'),\r\n        inputThirdCheck: $('#inputThirdCheck'),\r\n        settingFrom: $('#settingFrom'),\r\n        errorSettings: $('#errorSettings'),\r\n\r\n        params: {},\r\n\r\n        getSettings: function() { //read setting's values\r\n            var settings = LW.getSettings();\r\n\r\n            $(Settings.inputFirstCheck).val(settings.first);\r\n            $(Settings.inputSecondCheck).val(settings.second);\r\n            $(Settings.inputThirdCheck).val(settings.third);\r\n\r\n            Settings.params = settings; //store local\r\n        },\r\n\r\n        saveSetting: function() { //save setting's values to DB\r\n            var first = $(Settings.inputFirstCheck).val().trim(),\r\n                second = $(Settings.inputSecondCheck).val().trim(),\r\n                third = $(Settings.inputThirdCheck).val().trim(),\r\n                form = $(Settings.settingFrom),\r\n                errorName = '',\r\n                error = false;\r\n\r\n            Utils.clearFields();\r\n            //check for empty fields\r\n            if (!first) {\r\n                error = Utils.setFieldError(form.children(':nth-child(1)'));\r\n                errorName = 'empty';\r\n            } else if (!second) {\r\n                error = Utils.setFieldError(form.children(':nth-child(2)'));\r\n                errorName = 'empty';\r\n            } else if (!third) {\r\n                error = Utils.setFieldError(form.children(':nth-child(3)'));\r\n                errorName = 'empty';\r\n            } else { //only digits is valid\r\n                if (!Utils.isNumber(first)) {\r\n                    error = Utils.setFieldError(form.children(':nth-child(1)'));\r\n                    errorName = 'number';\r\n                };\r\n                if (!Utils.isNumber(second)) {\r\n                    error = Utils.setFieldError(form.children(':nth-child(2)'));\r\n                    errorName = 'number';\r\n                };\r\n                if (!Utils.isNumber(third)) {\r\n                    error = Utils.setFieldError(form.children(':nth-child(3)'));\r\n                    errorName = 'number';\r\n                };\r\n            }\r\n            if (error) { //show error if any\r\n                var errorTxt = (errorName == 'empty') ? local[local.currentLocal].errorEmpty : local[local.currentLocal].errorValid;\r\n                $(Settings.errorSettings).removeClass('nodisplay').text(errorTxt);\r\n            } else { //otherwise save new settings\r\n                settings = {\r\n                    first: first,\r\n                    second: second,\r\n                    third: third\r\n                };\r\n                LW.putSettings(settings);\r\n                $(Settings.errorSettings).removeClass('nodisplay').text(local[local.currentLocal].errorNo);\r\n\r\n                Settings.params = settings; //store local\r\n            };\r\n        },\r\n\r\n        cancelSetting: function() {\r\n            Utils.clearFields();\r\n            Settings.getSettings();\r\n        },\r\n\r\n        init: function() {\r\n            $(document).on('click touchstart', '#saveSettings', Settings.saveSetting);\r\n            $(document).on('click touchstart', '#cancelSettings', Settings.cancelSetting);\r\n        }\r\n    };\r\n}\r\n\r\n\r\n    if (typeof(Learn) == 'undefined' || Learn == null || !Learn) {\r\n\r\n        Learn = {\r\n\r\n            wordsLearn: [],\r\n            currentIndex: 0,\r\n\r\n            learnWordsNum: $('#learnWordsNum'),\r\n            learnWordsTopNum: $('#learnWordsTopNum'),\r\n            learnWordsTopSNum: $('#learnWordsTopSNum'),\r\n\r\n            learnWord: $('#learnWord'),\r\n            translateWord: $('#translateWord'),\r\n            learnWordsGrp: $('#learnWordsGrp'),\r\n            noWordsLeft: $('#noWordsLeft'),\r\n            allWordsOk: $('#allWordsOk'),\r\n\r\n            recountIndexLearn: function() { //count words to learn\r\n                \"use strict\";\r\n                if (!Learn.wordsLearn.length) {\r\n                    $(LW.index).each(function(index, node) { //the initial counting\r\n                        var item = LW.readItem(LW.name+'-' + node);\r\n                        if (item) {\r\n                            if (item.step == 0) {\r\n                                Learn.wordsLearn.push(item);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                console.log('Learn recountIndexLearn', Learn.wordsLearn);\r\n                var wordsLearnLength = (Learn.wordsLearn.length) ? Learn.wordsLearn.length : '';\r\n\r\n                $(learnWordsNum).text(wordsLearnLength || '0');\r\n                $(learnWordsTopNum).text(wordsLearnLength);\r\n                $(learnWordsTopSNum).text(wordsLearnLength);\r\n            },\r\n\r\n            showWord: function() { //show a next word to learn\r\n                if (Learn.wordsLearn.length) {\r\n                    $(learnWord).text(Learn.wordsLearn[Learn.currentIndex].word);\r\n                    $(translateWord).text(Learn.wordsLearn[Learn.currentIndex].translate);\r\n                    $(learnWordsGrp).removeClass('nodisplay');\r\n                    $(noWordsLeft).addClass('nodisplay');\r\n                } else {\r\n                    $(allWordsOk).text(local[local.currentLocal].allWordsOk);\r\n                    $(noWordsLeft).removeClass('nodisplay');\r\n                    $(learnWordsGrp).addClass('nodisplay');\r\n                }\r\n            },\r\n\r\n            actionWord: function(step, reindex) {\r\n                if (step) {\r\n                    var word = {\r\n                        index: Learn.wordsLearn[Learn.currentIndex].index,\r\n                        word: Learn.wordsLearn[Learn.currentIndex].word,\r\n                        translate: Learn.wordsLearn[Learn.currentIndex].translate,\r\n                        step: step,\r\n                        date: (step == 1) ? (Utils.getToday() + Utils.delay * Settings.params.first) : 0\r\n                    };\r\n\r\n                    LW.storeItem(LW.name+'-' + Learn.wordsLearn[Learn.currentIndex].index, word); //save word\r\n\r\n                    if (reindex) {\r\n                        Learn.wordsLearn.splice(Learn.currentIndex, 1); //remove from index\r\n                        Learn.recountIndexLearn();\r\n                    } else {\r\n                        Learn.currentIndex++;\r\n                    }\r\n                } else {\r\n                    Learn.currentIndex++;\r\n                }\r\n\r\n                if (Learn.currentIndex >= Learn.wordsLearn.length) {\r\n                    Learn.currentIndex = 0;\r\n                }\r\n                Learn.showWord();\r\n            },\r\n\r\n            rememberWord: function() {\r\n                Learn.actionWord(1, true);\r\n            },\r\n\r\n            repeatWord: function() {\r\n                Learn.actionWord(0);\r\n            },\r\n\r\n            knownWord: function() {\r\n                Learn.actionWord(4, true);\r\n            },\r\n\r\n            init: function() {\r\n                $(document).on('click touchstart', '#rememberBtn', Learn.rememberWord);\r\n                $(document).on('click touchstart', '#repeatBtn', Learn.repeatWord);\r\n                $(document).on('click touchstart', '#knownBtn', Learn.knownWord);\r\n            }\r\n        };\r\n\r\n        Learn.init();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    if (typeof(Repeat) == 'undefined' || Repeat == null || !Repeat) {\r\n\r\n        Repeat = {\r\n\r\n            wordsRepeat: {\r\n                first: [],\r\n                second: [],\r\n                third: []\r\n            },\r\n\r\n            repeatWordsNum: $('#repeatWordsNum'),\r\n            repeatWordsTopNum: $('#repeatWordsTopNum'),\r\n            repeatWordsTopSNum: $('#repeatWordsTopSNum'),\r\n            checkWord: $('#checkWord'),\r\n            checkWordInp: $('#checkWordInp'),\r\n            enterWord: $('#enterWord'),\r\n            inputWord: $('#inputWord'),\r\n            noWordsRepeat: $('#noWordsRepeat'),\r\n            enterBtn: $('#enterBtn'),\r\n\r\n            recountIndexRepeat: function() {\r\n                //count words to Repeat\r\n                \"use strict\";\r\n                if (!Repeat.wordsRepeat.first.length && !Repeat.wordsRepeat.second.length && !Repeat.wordsRepeat.third.length) {\r\n                    $(LW.index).each(function(index, node) { //the initial counting\r\n                        var item = LW.readItem(LW.name+'-' + node);\r\n                        if (item) {\r\n                            if (Utils.getToday() > item.date) { //if this word is for today\r\n\r\n                                if (item.step == 1) {\r\n                                    Repeat.wordsRepeat.first.push(item);\r\n                                } else if (item.step == 2) {\r\n                                    Repeat.wordsRepeat.second.push(item);\r\n                                }\r\n                                if (item.step == 3) {\r\n                                    Repeat.wordsRepeat.third.push(item);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                var wordsRepeatTotal = Repeat.wordsRepeat.first.length + Repeat.wordsRepeat.second.length + Repeat.wordsRepeat.third.length,\r\n                    wordsRepeatLength = (wordsRepeatTotal) ? wordsRepeatTotal : '';\r\n\r\n                $(repeatWordsNum).text(wordsRepeatLength || '0');\r\n                $(repeatWordsTopNum).text(wordsRepeatLength);\r\n                $(repeatWordsTopSNum).text(wordsRepeatLength);\r\n            },\r\n\r\n            getWord: function(index, arrWords) {\r\n                //if index is 0 we get the correct word. The other words are random\r\n                if (index == 0) {\r\n                    wordPlaceholder = Repeat.wordsRepeat[(Repeat.wordsRepeat.first.length) ? 'first' : 'second'][0][(Repeat.wordsRepeat.first.length) ? 'translate' : 'word'];\r\n                } else {\r\n                    wordPlaceholder = Vocabulary[(Repeat.wordsRepeat.first.length) ? 'translates' : 'words'][Utils.getRandomInt(0, Vocabulary[(Repeat.wordsRepeat.first.length) ? 'translates' : 'words'].length - 1)];\r\n                }\r\n\r\n                if (arrWords.indexOf(wordPlaceholder) >= 0) {\r\n                    Repeat.getWord(index, arrWords);\r\n                }\r\n\r\n                return wordPlaceholder;\r\n            },\r\n\r\n\r\n            showWord: function() { //show a next word to Repeat\r\n                if (Repeat.wordsRepeat.first.length || Repeat.wordsRepeat.second.length) {\r\n                    var id = Repeat.wordsRepeat[(Repeat.wordsRepeat.first.length) ? 'first' : 'second'][0].index,\r\n                        wordPlaceholder = '';\r\n                    var arrWords = new Array();\r\n                    $(checkWordInp).text(Repeat.wordsRepeat[(Repeat.wordsRepeat.first.length) ? 'first' : 'second'][0][(Repeat.wordsRepeat.first.length) ? 'word' : 'translate']).data('id', id);\r\n\r\n                    var arrOptionButtons = $('[data-type=checkWordBtn]');\r\n                    //the answer buttons are shuffled so that we don't know which one is the correct word.\r\n                    Utils.shuffle(arrOptionButtons);\r\n\r\n                    arrOptionButtons.each(function(index, node) {\r\n\r\n                        wordPlaceholder = Repeat.getWord(index, arrWords);\r\n\r\n                        arrWords[index] = wordPlaceholder;\r\n\r\n                        $(this).text(wordPlaceholder);\r\n                    });\r\n                    $(enterBtn).data('direction', true);\r\n                    $(checkWord).removeClass('nodisplay');\r\n                    $(enterWord).addClass('nodisplay');\r\n                    $(noWordsRepeat).addClass('nodisplay');\r\n                } else if (Repeat.wordsRepeat.third.length) {\r\n                    $(enterWordInp).text(Repeat.wordsRepeat.third[0].translate);\r\n                    $(checkWord).addClass('nodisplay');\r\n                    $(enterWord).removeClass('nodisplay');\r\n                    $(noWordsRepeat).addClass('nodisplay');\r\n                } else {\r\n                    $(checkWord).addClass('nodisplay');\r\n                    $(enterWord).addClass('nodisplay');\r\n                    $(noWordsRepeat).removeClass('nodisplay');\r\n                }\r\n            },\r\n\r\n            actionWord: function(step, reindex) {\r\n                if (step) {\r\n\r\n\r\n                    LW.storeItem(LW.name+'-' + Repeat.wordsRepeat[Repeat.currentIndex].word, word); //save word\r\n\r\n                    if (reindex) {\r\n                        Repeat.wordsRepeat.splice(Repeat.currentIndex, 1); //remove from index\r\n                        Repeat.recountIndexRepeat();\r\n                    } else {\r\n                        Repeat.currentIndex++;\r\n                    }\r\n                } else {\r\n                    Repeat.currentIndex++;\r\n                }\r\n\r\n                if (Repeat.currentIndex >= Repeat.wordsRepeat.length) {\r\n                    Repeat.currentIndex = 0;\r\n                }\r\n                Repeat.showWord(Repeat.currentIndex);\r\n            },\r\n\r\n            checkWord: function(self) {\r\n                var word = {\r\n                    index: Repeat.wordsRepeat[(Repeat.wordsRepeat.first.length) ? 'first' : 'second'][0].index,\r\n                    word: Repeat.wordsRepeat[(Repeat.wordsRepeat.first.length) ? 'first' : 'second'][0].word,\r\n                    translate: Repeat.wordsRepeat[(Repeat.wordsRepeat.first.length) ? 'first' : 'second'][0].translate,\r\n                    step: Repeat.wordsRepeat[(Repeat.wordsRepeat.first.length) ? 'first' : 'second'][0].step,\r\n                };\r\n\r\n                if ($(self).text() == ((Repeat.wordsRepeat.first.length) ? word.translate : word.word)) {\r\n                    word.step++;\r\n                    word.date = Utils.getToday() + Utils.delay * Settings.params[(Repeat.wordsRepeat.first.length) ? 'second' : 'third'];\r\n                } else {\r\n                    word.step--;\r\n                    word.date = (Repeat.wordsRepeat.first.length) ? 0 : Utils.getToday() + Utils.delay * Settings.params.first;\r\n                }\r\n                LW.storeItem(LW.name+'-' + word.index, word); //save word\r\n                Repeat.wordsRepeat[(Repeat.wordsRepeat.first.length) ? 'first' : 'second'].splice(0, 1); //remove from index\r\n                Learn.wordsLearn = [];\r\n                Learn.recountIndexLearn();\r\n                Learn.showWord();\r\n                Repeat.recountIndexRepeat();\r\n                Repeat.showWord();\r\n            },\r\n\r\n            repeatWord: function() {\r\n                var word = {\r\n                    index: Repeat.wordsRepeat.third[0].index,\r\n                    word: Repeat.wordsRepeat.third[0].word,\r\n                    translate: Repeat.wordsRepeat.third[0].translate,\r\n                    step: Repeat.wordsRepeat.third[0].step,\r\n                };\r\n                if ($(enterWordInp).val() == word.word) {\r\n                    word.step++;\r\n                    word.date = 0;\r\n                } else {\r\n                    word.step--;\r\n                    word.date = Utils.getToday() + Utils.delay * Settings.params.second;\r\n                };\r\n                LW.storeItem(LW.name+'-' + word.index, word); //save word\r\n                Repeat.wordsRepeat.third.splice(0, 1); //remove from index\r\n                Learn.wordsLearn = [];\r\n                Learn.recountIndexLearn();\r\n                Learn.showWord();\r\n                Repeat.recountIndexRepeat();\r\n                Repeat.showWord();\r\n            },\r\n\r\n            init: function() {\r\n                $(document).on('click touchstart', '[data-type=checkWordBtn]', function() {\r\n                    Repeat.checkWord(this)\r\n                });\r\n                $(document).on('click touchstart', '#enterBtn', Repeat.repeatWord);\r\n            }\r\n        };\r\n\r\n        Repeat.init();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /**************************************************\r\n     * Learn Words // vocabulary.js\r\n     * coded by Anatolii Marezhanyi aka e1r0nd//[CRG] - March 2014\r\n     * http://linkedin.com/in/merezhany/ e1r0nd.crg@gmail.com\r\n     * Placed in public domain.\r\n     **************************************************/\r\n\r\n    if (typeof(Vocabulary) == 'undefined' || Vocabulary == null || !Vocabulary) {\r\n\r\n        Vocabulary = {\r\n            rowTemplate: '<div id=\"{{node}}\" class=\"row\"><div class=\"col-md-5 col-sm-5 col-xs-4\">{{txt}}</div>' +\r\n                '<div class=\"col-md-5 col-sm-5 col-xs-4\">{{translate}}</div>' +\r\n                '<div class=\"col-md-2 col-sm-2 col-xs-4\"><button data-node=\"{{node}}\" type=\"button\" class=\"btn btn-info js-edit-btn\"><span class=\"glyphicon glyphicon-edit\"></span></button></div>' +\r\n                '</div>' +\r\n                '<div id=\"{{node}}Edit\" class=\"row nodisplay\"><form id=\"form-{{node}}\" role=\"form\">' +\r\n                '<div class=\"col-md-5 col-sm-5 col-xs-4\"><input type=\"text\" class=\"form-control inp-fld\" id=\"word-{{node}}\" placeholder=\"Enter word\" value=\"{{txt}}\"></div>' +\r\n                '<div class=\"col-md-5 col-sm-5 col-xs-4\"><input type=\"text\" class=\"form-control inp-fld\" id=\"translate-{{node}}\" placeholder=\"Enter translate\" value=\"{{translate}}\"></div>' +\r\n                '<div class=\"col-md-2 col-sm-2 col-xs-4\"><button data-node=\"{{node}}\" type=\"button\" class=\"btn btn-success js-save-btn\"><span class=\"glyphicon glyphicon-ok\"></span></button>' +\r\n                '<button id=\"del-{{node}}\" data-node=\"{{node}}\" data-id=\"{{index}}\" type=\"button\" class=\"btn btn-danger js-del-btn\"><span class=\"glyphicon glyphicon-remove\"></span></button>' +\r\n                '</div></form>' +\r\n                '</div>',\r\n\r\n            totalWordsNum: $('#totalWordsNum'),\r\n            vocabularyBox: $('#vocabularyBox'),\r\n            errorVocabularyBox: $('#errorVocabularyBox'),\r\n            errorVocabulary: $('#errorVocabulary'),\r\n            inputWordTxt: $('#inputWordTxt'),\r\n            inputTranslate: $('#inputTranslate'),\r\n            addWordForm: $('#addWordForm'),\r\n\r\n            words: [],\r\n            translates: [],\r\n\r\n            recountTotal: function() {\r\n                $(Vocabulary.totalWordsNum).text(LW.index.length);\r\n            },\r\n\r\n            removeWord: function(self, notReindex) { //remove word from vocabulary\r\n                var id = $(self).data('id'),\r\n                    node = $(self).data('node');\r\n\r\n                if (!notReindex) {\r\n                    LW.index.splice(id, 1); //remove from index\r\n                    LW.storeItem(LW.name+'-words', LW.index.join());\r\n                }\r\n                LW.removeItem(LW.name+'-' + node); //remove this word\r\n                $('#' + node).remove();\r\n                $('#' + node + 'Edit').remove();\r\n                Vocabulary.recountTotal();\r\n                Learn.wordsLearn = [];\r\n                Learn.recountIndexLearn();\r\n                Repeat.wordsRepeat = {\r\n                    currentIndexFirst: 0,\r\n                    first: [],\r\n                    currentIndexSecond: 0,\r\n                    second: [],\r\n                    currentIndexThird: 0,\r\n                    third: []\r\n                };\r\n                Repeat.recountIndexRepeat();\r\n            },\r\n\r\n            viewWord: function() {\r\n                var contentInner = '';\r\n\r\n                $(LW.index).each(function(index, node) {\r\n                    \"use strict\";\r\n                    var txt, translate;\r\n                    var item = LW.readItem(LW.name+'-' + node);\r\n                    if (item) {\r\n                        txt = item.word;\r\n                        translate = item.translate;\r\n\r\n                        Vocabulary.words.push(txt);\r\n                        Vocabulary.translates.push(translate);\r\n                        contentInner += Vocabulary.rowTemplate.replace(/{{node}}/g, node).replace(/{{txt}}/g, txt).replace(/{{translate}}/g, translate).replace(/{{index}}/g, index);\r\n                    }\r\n                });\r\n\r\n\r\n                $(Vocabulary.vocabularyBox).html(contentInner);\r\n                Vocabulary.recountTotal();\r\n            },\r\n\r\n            addSaveWord: function(wordTxt, translate, addForm, addWord) {\r\n                \"use strict\";\r\n\r\n                var inputWord = wordTxt.val().trim(),\r\n                    inputTranslate = translate.val().trim(),\r\n                    form = addForm,\r\n                    error = false,\r\n                    word = {};\r\n\r\n                Utils.clearFields();\r\n                //check for empty fields\r\n                if (!inputWord) {\r\n                    error = Utils.setFieldError(form.children(':nth-child(1)').children(':nth-child(1)'));\r\n                } else if (!inputTranslate) {\r\n                    error = Utils.setFieldError(form.children(':nth-child(2)').children(':nth-child(1)'));\r\n                }\r\n                if (error) { //show error if any\r\n                    $(Vocabulary.errorVocabularyBox).removeClass('nodisplay');\r\n                    $(Vocabulary.errorVocabulary).text(local[local.currentLocal].errorEmpty);\r\n                } else { //otherwise save new word to Vocabulary\r\n                    var newIndexVal;\r\n                    var todayDate = Utils.getToday(true);\r\n                    word = {\r\n                        index: todayDate,\r\n                        word: inputWord,\r\n                        translate: inputTranslate,\r\n                        step: 0,\r\n                        date: 0\r\n                    };\r\n\r\n                    // save newly added word\r\n                    newIndexVal = 'index' + (LW.index.length + 1);\r\n                    LW.storeItem(LW.name+'-' + newIndexVal, word);\r\n\r\n                    var contentInner = Vocabulary.rowTemplate.replace(/{{node}}/g, todayDate).replace(/{{txt}}/g, inputWord).replace(/{{translate}}/g, inputTranslate).replace(/{{index}}/g, (addWord) ? LW.index.length : LW.index.indexOf(inputWord));\r\n\r\n                    if (addWord) {\r\n                        LW.index.push(newIndexVal);\r\n                        wordTxt.val('');\r\n                        translate.val('');\r\n                        $(Vocabulary.errorVocabularyBox).removeClass('nodisplay');\r\n                        $(Vocabulary.errorVocabulary).text(local[local.currentLocal].errorNoW);\r\n                        $(Vocabulary.vocabularyBox).append(contentInner);\r\n                    } else {\r\n                        var id = wordTxt.attr('id').slice(5);\r\n\r\n                        LW.index[LW.index.indexOf(id)] = newIndexVal;\r\n                        $('#' + id).before(contentInner);\r\n                        Vocabulary.removeWord($('#del-' + id), true);\r\n                    }\r\n\r\n                    LW.storeItem(LW.name+'-words', LW.index.join()); //add word to Vocabulary list\r\n                    Utils.clearFields();\r\n                    Vocabulary.recountTotal();\r\n                    Learn.wordsLearn = [];\r\n                    Learn.recountIndexLearn();\r\n                    Learn.showWord();\r\n                };\r\n            },\r\n\r\n            init: function() {\r\n                $(document).on('click touchstart', '#addBtn', function() {\r\n                    Vocabulary.addSaveWord($(Vocabulary.inputWordTxt), $(Vocabulary.inputTranslate), $(Vocabulary.addWordForm), true);\r\n                });\r\n                $(document).on('click touchstart', '.js-edit-btn', function() {\r\n                    $('#' + $(this).data('node')).hide();\r\n                    $('#' + $(this).data('node') + 'Edit').show();\r\n                });\r\n                $(document).on('click touchstart', '.js-save-btn', function() {\r\n                    Vocabulary.addSaveWord($('#word-' + $(this).data('node')), $('#translate-' + $(this).data('node')), $('#form-' + $(this).data('node')));\r\n                });\r\n                $(document).on('click touchstart', '.js-del-btn', function() {\r\n                    Vocabulary.removeWord(this);\r\n                });\r\n            }\r\n        };\r\n\r\n        Vocabulary.init();\r\n    }\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/js/actions/actions.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}